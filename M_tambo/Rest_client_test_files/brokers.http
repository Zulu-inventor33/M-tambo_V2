### Successful Registration
POST http://127.0.0.1:8000/api/brokers/register/ HTTP/1.1
Content-Type: application/json

{
  "first_name": "John",
  "last_name": "Doe",
  "email": "john.doe@example.com",
  "phone_number": "+1234567890",
  "password": "securepassword123",
  "confirm_password": "securepassword123"
}

### Response (201 Created)
HTTP/1.1 201 Created
Content-Type: application/json

{
  "message": "Broker registered successfully.",
  "data": {
    "first_name": "John",
    "last_name": "Doe",
    "email": "john.doe@example.com",
    "phone_number": "+1234567890",
    "referral_code": "A1B2C3D4",  # Auto-generated 8-character referral code
    "commission_percentage": 12.5,
    "commission_duration_months": 24
  }
}


### Passwords Don't Match (Validation Error)
POST http://127.0.0.1:8000/api/brokers/register/ HTTP/1.1
Content-Type: application/json

{
  "first_name": "Jane",
  "last_name": "Smith",
  "email": "jane.smith@example.com",
  "phone_number": "+0987654321",
  "password": "password123",
  "confirm_password": "differentpassword"
}

### Response (400 Bad Request)
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "password": [
    "Passwords do not match."
  ]
}


### Missing Required Field (Phone Number)
POST http://127.0.0.1:8000/api/brokers/register/ HTTP/1.1
Content-Type: application/json

{
  "first_name": "Alice",
  "last_name": "Wonderland",
  "email": "alice.wonderland@example.com",
  "password": "strongpassword123",
  "confirm_password": "strongpassword123"
}

### Response (400 Bad Request)
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "phone_number": [
    "This field is required."
  ]
}


### Invalid Email Format
POST http://127.0.0.1:8000/api/brokers/register/ HTTP/1.1
Content-Type: application/json

{
  "first_name": "Bob",
  "last_name": "Builder",
  "email": "bob.builderexample.com",  # Invalid email format
  "phone_number": "+1122334455",
  "password": "password123",
  "confirm_password": "password123"
}

### Response (400 Bad Request)
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "email": [
    "Enter a valid email address."
  ]
}


### Missing Confirm Password
POST http://127.0.0.1:8000/api/brokers/register/ HTTP/1.1
Content-Type: application/json

{
  "first_name": "Charlie",
  "last_name": "Brown",
  "email": "charlie.brown@example.com",
  "phone_number": "+9876543210",
  "password": "mypassword123"
}

### Response (400 Bad Request)
HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "confirm_password": [
    "This field is required."
  ]
}


### Successfully Registering Multiple Brokers
POST http://127.0.0.1:8000/api/brokers/register/ HTTP/1.1
Content-Type: application/json

{
  "first_name": "Eve",
  "last_name": "Adams",
  "email": "eve.adams@example.com",
  "phone_number": "+1112223333",
  "password": "evepassword123",
  "confirm_password": "evepassword123"
}

### Response (201 Created)
HTTP/1.1 201 Created
Content-Type: application/json

{
  "message": "Broker registered successfully.",
  "data": {
    "first_name": "Eve",
    "last_name": "Adams",
    "email": "eve.adams@example.com",
    "phone_number": "+1112223333",
    "referral_code": "B3F4A5D6",  # Auto-generated 8-character referral code
    "commission_percentage": 12.5,
    "commission_duration_months": 24
  }
}


# 1. Request for a valid broker with registered maintenance companies
### Get all maintenance companies for broker with ID 1 (assuming valid broker with registered companies)
GET http://127.0.0.1:8000/api/brokers/1/maintenance_companies/
Accept: application/json

### Expected Response for Case 1 (valid broker with registered maintenance companies)
HTTP/1.1 200 OK
Content-Type: application/json

{
  "broker_id": 1,
  "maintenance_companies": [
    {
      "id": 1,
      "company_name": "Emergency Power Systems",
      "company_address": "123 Power Rd, Cityville",
      "company_registration_number": "EPS-12345",
      "specialization": "Power Backup Generators",
      "created_at": "2025-01-01T00:00:00Z",
      "updated_at": "2025-01-01T00:00:00Z"
    },
    {
      "id": 2,
      "company_name": "TechFix Solutions",
      "company_address": "456 Repair St, Townsville",
      "company_registration_number": "TFS-98765",
      "specialization": "Home Appliances Repair",
      "created_at": "2025-01-01T00:00:00Z",
      "updated_at": "2025-01-01T00:00:00Z"
    }
  ]
}

###

# 2. Request for a broker with no registered maintenance companies
### Get all maintenance companies for broker with ID 2 (assuming no companies registered)
GET http://127.0.0.1:8000/api/brokers/2/maintenance_companies/
Accept: application/json

### Expected Response for Case 2 (broker has no registered maintenance companies)
HTTP/1.1 200 OK
Content-Type: application/json

{
  "message": "No maintenance companies registered under this broker."
}

###

# 3. Request for a broker ID that doesn't exist
### Get all maintenance companies for broker with ID 999 (non-existent broker ID)
GET http://127.0.0.1:8000/api/brokers/999/maintenance_companies/
Accept: application/json

### Expected Response for Case 3 (non-existent broker ID)
HTTP/1.1 404 Not Found
Content-Type: application/json

{
  "error": "Broker with ID 999 not found."
}

###

